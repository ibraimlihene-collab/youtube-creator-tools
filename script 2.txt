تقرير الخبراء: استقبال ومعالجة الوسائط المتعددة باستخدام Gemini Flash
1. مقدمة إلى قدرات Gemini Flash متعددة الوسائط
تُعد Gemini Flash نموذجًا عالي الكفاءة وفعالاً من حيث التكلفة، مصممًا خصيصًا للتطبيقات التي تتطلب حجمًا كبيرًا وكمونًا منخفضًا. إنه جزء لا يتجزأ من مجموعة واجهة برمجة تطبيقات Gemini الأوسع، والتي تدعم مجموعة متنوعة من مهام إنشاء المحتوى وفهمه. يكمن جوهر قوة نماذج Gemini، بما في ذلك Flash، في بنيتها متعددة الوسائط المتأصلة، مما يعني أنها "مصممة لتكون متعددة الوسائط من الألف إلى الياء". يسمح هذا التصميم الأساسي بالمعالجة والفهم الأصيل لأنواع البيانات المختلفة – النص، الصور، الصوت، الفيديو، وحتى التعليمات البرمجية والأدوات – بطريقة متكاملة بعمق.

البنية الأساسية لـ Gemini Flash، التي تم تصميمها لتكون متعددة الوسائط منذ البداية، تمثل ميزة معمارية جوهرية. هذا يعني أن النموذج لا يقتصر على معالجة الوسائط المختلفة بمعزل عن بعضها البعض أو تحويلها إلى تنسيق واحد داخليًا؛ بل يفهمها ويتفاعل معها بشكل أصيل. هذا التكامل العميق ضروري لتحقيق فهم دقيق في السيناريوهات المعقدة، مثل تحليل مقطع فيديو حيث تكون الإشارات البصرية والحوار الصوتي على حد سواء حاسمة للسياق. هذا يضع Gemini Flash كأداة قوية لتطبيقات الذكاء الاصطناعي متعددة الوسائط بشكل حقيقي، مما يميزها عن النماذج التي قد تكون قد أضيفت إليها قدرات متعددة الوسائط كخاصية لاحقة.

التفاعلات متعددة الوسائط في الوقت الفعلي باستخدام Live API
توسع واجهة برمجة تطبيقات Gemini Live قدرات Flash لتشمل التفاعلات الصوتية والمرئية في الوقت الفعلي وذات الكمون المنخفض. تقوم هذه الواجهة بمعالجة تدفقات مستمرة من الصوت والفيديو والنص لتقديم استجابات فورية شبيهة بالبشر، مما يخلق تجربة محادثة طبيعية للمستخدمين.

تُعد هذه الإمكانية ذات قيمة خاصة للتطبيقات التي تتطلب ذكاءً اصطناعيًا ديناميكيًا ومحادثيًا، مثل مراقبة حالة المعدات الصناعية حيث يمكن للمعالجة الصوتية والمرئية في الوقت الفعلي تحديد العيوب وتقديم رؤى فورية. إن قدرة Live API على معالجة "تدفقات مستمرة" من البيانات متعددة الوسائط  تمكن بشكل مباشر من تجارب المحادثة في الوقت الفعلي الشبيهة بالبشر. هذا يوضح علاقة السبب والنتيجة الواضحة: آلية إدخال التدفق هي الممكن المباشر للاستجابات الفورية ومنخفضة الكمون، والتي بدورها تعزز تفاعلاً طبيعيًا وشبيهًا بالبشر. بدون التدفق المستمر، سيكون الاستجابة المطلوبة لهذه التفاعلات مستحيلة، حيث سيتعين على النظام انتظار كتل بيانات كاملة، مما يؤدي إلى تأخيرات غير مقبولة.

اعتبارات التسعير للمدخلات متعددة الوسائط
تتبع Gemini 2.5 Flash هيكل تسعير متعدد المستويات، مع تكاليف مختلفة لأنواع الإدخال المختلفة. بالنسبة للمستوى المدفوع (لكل مليون توكن)، يتم تسعير مدخلات النص والصور والفيديو بسعر 0.30 دولار، بينما تكون مدخلات الصوت أعلى بكثير بسعر 1.00 دولار. يعكس تسعير Live API هذا الاختلاف أيضًا، حيث تبلغ تكلفة مدخلات الصوت/الصور (الفيديو) 3.00 دولارات ومخرجات الصوت 12.00 دولارًا لكل مليون توكن.

يشير التسعير المتفاوت لمدخلات الصوت (1.00 دولار لكل مليون توكن) مقارنة بالنص/الصور/الفيديو (0.30 دولار لكل مليون توكن) لـ Gemini 2.5 Flash إلى أن معالجة الصوت تتطلب موارد أكثر كثافة أو أكثر تعقيدًا للبنية التحتية لـ Google. يمكن أن يؤثر هذا التباين في التكلفة على قرارات التطوير، مما قد يدفع المطورين إلى إعطاء الأولوية للوسائط النصية/الصور/الفيديو حيث تكون التكلفة مصدر قلق أساسي، أو لتبرير التكلفة الأعلى بعناية للتطبيقات التي يكون فيها فهم الصوت أمرًا بالغ الأهمية. تعكس نماذج التسعير لخدمات السحابة غالبًا الموارد الحاسوبية الأساسية، والأجهزة المتخصصة، والتعقيد الخوارزمي المتضمن. حقيقة أن مدخلات الصوت أغلى بثلاث مرات من مدخلات النص أو الصورة أو الفيديو تشير بقوة إلى أن Google تتكبد تكاليف أعلى بكثير لمعالجة بيانات الصوت. هذا يمكن أن يكون بسبب الحاجة إلى نماذج أكثر تعقيدًا للتعرف على الكلام، أو النسخ في الوقت الفعلي، أو استخراج ميزات أكثر كثافة من أشكال الموجات الصوتية. هذا يعني أن التكلفة المالية المباشرة للتطبيقات التي تعتمد بشكل كبير على إدخال وإخراج الصوت ستكون أعلى.

2. استقبال الصور باستخدام Gemini Flash
تدعم Gemini Flash مجموعة من تنسيقات الصور الشائعة، والتي يتم تحديدها بواسطة أنواع MIME الخاصة بها. تشمل هذه التنسيقات image/png (PNG)، وimage/jpeg (JPEG)، وimage/webp (WebP).

طرق الإدخال
هناك طريقتان أساسيتان لتقديم بيانات الصور إلى Gemini Flash:

تمرير بيانات الصور المضمنة (Inline Image Data):
تُعد هذه الطريقة مثالية لملفات الصور الأصغر حجمًا أو عندما تكون هناك حاجة إلى طلب واحد وسريع. يتم توفير بيانات الصورة مباشرة ضمن طلب 

generateContent، عادةً كسلاسل مشفرة بـ Base64 أو عن طريق قراءة الملفات المحلية إلى بايتات. ومع ذلك، هناك قيود مهمة: يجب أن يكون "إجمالي حجم الطلب" (بما في ذلك المطالبات النصية وتعليمات النظام والبايتات المضمنة) أقل من 20 ميجابايت. سيؤدي تجاوز هذا الحد إلى خطأ HTTP 413. على سبيل المثال، في Python، يمكن استخدام 

types.Part.from_bytes(data=image_bytes, mime_type='image/jpeg') لتمرير البيانات المضمنة.

تحميل الصور باستخدام Files API:
يُوصى بهذه الطريقة لملفات الصور الأكبر حجمًا (حيث يتجاوز إجمالي حجم الطلب 20 ميجابايت) أو للسيناريوهات التي تحتاج فيها نفس الصورة إلى إعادة استخدامها عبر طلبات متعددة. يتم تحميل الصور أولاً إلى Files API، والتي تُرجع URI. ثم يتم الرجوع إلى هذا URI في مكالمات 

generateContent اللاحقة. توفر هذه الطريقة كفاءة أكبر للاستخدام المتكرر وتتجاوز حد الطلب المضمن البالغ 20 ميجابايت. على سبيل المثال، في Python، يمكن استخدام 

my_file = client.files.upload(file="path/to/sample.jpg"); response = client.generate_content(model="gemini-2.5-flash", contents=[my_file, "Caption this image."]). يوفر برنامج 

examine_image.py النصي في مستودع GitHub hackingthemarkets/gemini-multimodal-structured-extraction أمثلة عملية لمعالجة الصور.

قيود حجم الصورة والطلب
يمكن تضمين ما يصل إلى 3000 ملف صورة في طلب واحد. على الرغم من عدم وجود حد محدد للبكسل، يتم تحجيم الصور الأكبر حجمًا تلقائيًا وتعبئتها لتناسب دقة قصوى تبلغ 3072 × 3072 بكسل، مع الحفاظ على نسبة العرض إلى الارتفاع الأصلية.

تُعد آلية ترميز التوكنات للصور مفصلة وتكشف كيف تترجم تعقيدات الصورة إلى تكلفة معالجة. تستهلك الصور التي لا تتجاوز أبعادها 384 × 384 بكسل 258 توكنًا. ومع ذلك، إذا تجاوز أحد الأبعاد 384 بكسل، يتم تقسيم الصورة إلى مربعات. يتم تغيير حجم كل مربع إلى 768 × 768 بكسل ويستخدم 258 توكنًا. يتم تعيين حجم المربع افتراضيًا على أصغر بُعد مقسومًا على 1.5، ويتم تعديله ليكون لا يقل عن 256 بكسل ولا يزيد عن 768 بكسل. هذا يعني أنه بمجرد أن تؤدي الصورة إلى التجانب (أي تجاوز أحد الأبعاد 384 بكسل)، يمكن أن تزداد تكلفة التوكنات بشكل كبير اعتمادًا على عدد المربعات التي يتم إنشاؤها بحجم 768 × 768. وبالتالي، يجب على المطورين الموازنة بين جودة الصورة وكفاءة التوكنات، وربما تحسين أبعاد الصورة لتجنب التجانب المفرط في التطبيقات الحساسة للتكلفة. قواعد ترميز التوكنات هذه تحدد نموذج التكلفة لمعالجة الصور؛ زيادة طفيفة في بُعد واحد يمكن أن تؤدي إلى زيادة غير متناسبة في تكلفة التوكن إذا أدت إلى أقسام متعددة، مما يجعل فهم آلية التجانب هذه أمرًا بالغ الأهمية لتحسين استخدام واجهة برمجة التطبيقات وإدارة التكاليف.

قدرات فهم الصور الرئيسية
تم تصميم نماذج Gemini لمجموعة واسعة من مهام معالجة الصور والرؤية الحاسوبية. تشمل هذه المهام تسمية الصور وتصنيفها والإجابة على الأسئلة البصرية. بالإضافة إلى ذلك، توفر نماذج Gemini (2.0 والإصدارات الأحدث) دقة محسنة لمهام مثل اكتشاف الكائنات وتجزئتها من خلال تدريب إضافي.

يمكن لـ Gemini أيضًا إنشاء الصور وتعديلها بناءً على مطالبات نصية أو مطالبات تجمع بين النص والصورة. يتطلب هذا استخدام نماذج محددة مثل gemini-2.0-flash-preview-image-generation وتعيين responseModalities: في التكوين. ومع ذلك، من المهم ملاحظة أن قدرات توليد الصور لا تدعم مدخلات الصوت أو الفيديو بشكل مباشر. هذا يعني أنه لا يمكن توجيه النموذج لإنشاء صورة بناءً على مقطع صوتي أو فيديو فقط. على الرغم من أن Gemini Flash يتمتع بقدرات عامة متعددة الوسائط ، فإن هذا ليس تناقضًا، بل هو قيد محدد على ميزة 

توليد الصور الفرعية. من الضروري توضيح أنه بينما يمكن لـ Gemini Flash فهم الصور والصوت والفيديو كمدخلات لتوليد المحتوى العام، فإن وظيفة توليد الصور مقيدة حاليًا بمدخلات النص والصورة. هذا التمييز حيوي للمطورين لتحديد نطاق تطبيقاتهم بشكل صحيح. هذا يعني أنه بينما يمكنك أن تطلب من Gemini وصف مقطع فيديو، لا يمكنك أن تطلب منه إنشاء صورة بناءً على محتوى هذا الفيديو مباشرة من خلال واجهة برمجة تطبيقات توليد الصور.

أفضل الممارسات والقيود لإدخال الصور
لتحقيق أفضل النتائج عند إدخال الصور، يُنصح باستخدام مطالبات تحتوي على صورة واحدة للكشف عن النص. يجب وضع الصورة الواحدة قبل المطالبة النصية لتحسين الأداء. إذا تم استخدام صور متعددة، يُفضل فهرسة هذه الصور (مثل "الصورة 1"، "الصورة 2") إذا كان سيتم الإشارة إليها لاحقًا في المطالبة. للحصول على نتائج أفضل، يُنصح باستخدام صور ذات دقة أعلى ، وتضمين أمثلة قليلة في المطالبة ، وتدوير الصور إلى اتجاهها الصحيح قبل إضافتها ، وتجنب الصور الضبابية.

ومع ذلك، توجد بعض القيود الهامة. سترفض النماذج الإجابة على الصور التي تنتهك سياسات السلامة. كما أن النماذج ليست دقيقة في تحديد موقع النص أو الكائنات في الصور؛ وقد تُرجع فقط أعدادًا تقريبية. لا تُعد النماذج مناسبة لتفسير الصور الطبية (مثل الأشعة السينية، الأشعة المقطعية) أو تقديم المشورة الطبية. ولا تهدف إلى التعرف على الأشخاص غير المشهورين في الصور. قد يحدث هلوسة أو أخطاء مع الصور منخفضة الجودة أو المدورة أو ذات الدقة المنخفضة للغاية، أو عند تفسير النص المكتوب بخط اليد.

الجدول 1: تنسيقات الصور المدعومة وطرق الإدخال لـ Gemini Flash

الميزة/الطريقة	التفاصيل
تنسيقات MIME المدعومة	
image/png (PNG), image/jpeg (JPEG), image/webp (WebP) 

تمرير البيانات المضمنة (Inline Data)	
- الاستخدام: للملفات الصغيرة (إجمالي حجم الطلب < 20 ميجابايت) 


- الآلية: يتم تضمين بيانات الصورة مباشرة (عادةً Base64 أو بايتات) في طلب generateContent 

تحميل باستخدام Files API	
- الاستخدام: للملفات الكبيرة (تتجاوز 20 ميجابايت) أو لإعادة استخدام الصور عبر طلبات متعددة 


- الآلية: يتم تحميل الصورة أولاً إلى Files API للحصول على URI، ثم يتم الرجوع إلى هذا URI في طلبات generateContent 

3. استقبال الصوت باستخدام Gemini Flash
تدعم Gemini Flash مجموعة واسعة من تنسيقات الصوت المحددة بواسطة أنواع MIME الخاصة بها. تشمل هذه التنسيقات: audio/wav، audio/mp3، audio/aiff، audio/aac، audio/ogg، audio/flac، audio/m4a (MPA)، audio/mpeg، audio/mpga، audio/mp4، audio/opus، audio/pcm، وaudio/webm.

طرق الإدخال
يمكن توفير بيانات الصوت لـ Gemini Flash بثلاث طرق رئيسية:

تمرير بيانات الصوت المضمنة (Inline Audio Data):
تُعد هذه الطريقة مناسبة لملفات الصوت الأصغر حجمًا حيث لا يتجاوز إجمالي حجم الطلب 20 ميجابايت. يتم تضمين بيانات الصوت مباشرة ضمن طلب 

generateContent.

تحميل الصوت باستخدام Files API:
يُوصى بهذه الطريقة عندما يتجاوز إجمالي حجم الطلب 20 ميجابايت أو عندما تكون هناك حاجة لإعادة استخدام عينات الصوت عدة مرات، حيث تكون أكثر كفاءة. يتم تحميل الملف الصوتي أولاً باستخدام Files API، ثم يتم استخدام URI الخاص به في مكالمات 

generateContent اللاحقة.

معالجة الصوت في الوقت الفعلي (Live API):
تتيح Live API تفاعلات صوتية في الوقت الفعلي وذات كمون منخفض من خلال معالجة تدفقات مستمرة من الصوت. بالنسبة لتنسيقات الصوت في Live API، يجب تحويل الصوت المدخل إلى تنسيق PCM 16-بت، 16 كيلو هرتز، أحادي (mono). بينما يكون الصوت المخرج بمعدل عينة 24 كيلو هرتز. يشير هذا المتطلب المحدد لتنسيق إدخال الصوت في Live API إلى أن معالجة الصوت إلى هذا التنسيق الموحد أمر بالغ الأهمية لتحقيق الأداء الأمثل والتوافق، حتى لو كانت التنسيقات الأخرى مدعومة بشكل عام لمكالمات واجهة برمجة التطبيقات غير المباشرة. هذا يعني ضرورة التحويل الصوتي من جانب العميل أو الخادم قبل الإرسال إلى Live API، مما يضيف خطوة معالجة مسبقة حاسمة إلى سير عمل التطوير.

قدرات فهم الصوت الرئيسية
يمكن لـ Gemini تحليل وفهم مدخلات الصوت لمجموعة متنوعة من حالات الاستخدام. تشمل هذه القدرات وصف محتوى الصوت، وتلخيصه، والإجابة على الأسئلة المتعلقة به، وتوفير نسخة نصية من الصوت، وتحليل أجزاء محددة من الصوت، واكتشاف العيوب بناءً على ملفات صوتية. للحصول على نسخة نصية من البيانات الصوتية، يكفي طلب ذلك في المطالبة (على سبيل المثال، "إنشاء نسخة نصية من الكلام."). يمكن أيضًا الإشارة إلى الطوابع الزمنية باستخدام تنسيق 

MM:SS لتحليل أجزاء محددة من الملف الصوتي.

تقدم Live API نماذج صوتية مختلفة بناءً على متطلبات التطبيق:

الصوت الأصلي (Native Audio): يوفر هذا الخيار الكلام الأكثر طبيعية وواقعية وأداءً متعدد اللغات أفضل. كما أنه يتيح ميزات متقدمة مثل الحوار العاطفي (الواعي بالمشاعر)، والصوت الاستباقي (حيث يمكن للنموذج أن يقرر تجاهل أو الاستجابة لمدخلات معينة)، و"التفكير". تدعم النماذج مثل gemini-2.5-flash-preview-native-audio-dialog و gemini-2.5-flash-exp-native-audio-thinking-dialog الصوت الأصلي.

الصوت شبه المتتالي (Half-Cascade Audio): يستخدم هذا الخيار بنية نموذج متتالية (إدخال صوت أصلي وإخراج نص إلى كلام). يوفر أداءً وموثوقية أفضل في بيئات الإنتاج، خاصة مع استخدام الأدوات. تدعم النماذج مثل gemini-live-2.5-flash-preview و gemini-2.0-flash-live-001 الصوت شبه المتتالي.

التمييز بين نماذج "الصوت الأصلي" و"الصوت شبه المتتالي" لـ Live API  يقدم مقايضة واضحة للمطورين: الصوت الأصلي يوفر تفاعلات أكثر ثراءً وشبيهة بالبشر (حوار عاطفي، تفكير)، بينما يقدم الصوت شبه المتتالي موثوقية أفضل في الإنتاج واستخدام الأدوات. هذا يعني أن اختيار النموذج يجب أن يكون مدفوعًا بمتطلبات التطبيق المحددة (على سبيل المثال، ذكاء اصطناعي محادثي عالي الدقة مقابل وكيل قوي ومتكامل مع الأدوات). هذا التمييز يوجه القرارات المعمارية بناءً على الهدف الأساسي للتطبيق.

قيود الصوت والطلب
يبلغ الحد الأقصى للملفات لكل طلب لمدخلات الصوت ملفًا صوتيًا واحدًا (لغير Live API). هذا القيد، جنبًا إلى جنب مع حد 20 ميجابايت للبيانات المضمنة، يعني أنه لتحليلات الصوت الأطول، يجب على المطورين استخدام Files API أو معالجة الصوت مسبقًا وتقطيعه. هذا يسلط الضوء على خيار تصميم لإدارة استهلاك الموارد لكل طلب، مما يجبر المطورين على إدارة عمليات تحميل الملفات وعناوين URI بدلاً من مجرد إرسال أجزاء صوتية مضمنة متعددة.

تتضمن القيود الأخرى احتمال حدوث أخطاء في التعرف على الأصوات غير الكلامية. وللحصول على طوابع زمنية دقيقة لملفات الصوت فقط، يجب تكوين معلمة 

audio_timestamp في generation_config.

الجدول 2: تنسيقات الصوت المدعومة وطرق الإدخال لـ Gemini Flash

الميزة/الطريقة	التفاصيل
تنسيقات MIME المدعومة	
audio/aac, audio/flac, audio/mp3, audio/m4a, audio/mpeg, audio/mpga, audio/mp4, audio/opus, audio/pcm, audio/wav, audio/webm 

تمرير البيانات المضمنة (Inline Data)	
- الاستخدام: للملفات الصوتية الصغيرة (إجمالي حجم الطلب < 20 ميجابايت) 


- الآلية: يتم تضمين بيانات الصوت مباشرة في طلب generateContent 

تحميل باستخدام Files API	
- الاستخدام: عندما يتجاوز إجمالي حجم الطلب 20 ميجابايت أو لإعادة استخدام عينات الصوت 


- الآلية: يتم تحميل الملف الصوتي أولاً إلى Files API، ثم يتم استخدام URI الخاص به في طلب generateContent 

Live API (الوقت الفعلي)	
- الاستخدام: للتفاعلات الصوتية في الوقت الفعلي ومنخفضة الكمون 


- تنسيق الإدخال: 16-bit PCM, 16kHz, أحادي (mono) 


- تنسيق الإخراج: 24kHz 

4. استقبال الفيديوهات باستخدام Gemini Flash
تدعم Gemini Flash مجموعة واسعة من تنسيقات الفيديو، المحددة بواسطة أنواع MIME الخاصة بها. تشمل هذه التنسيقات: video/x-flv (FLV)، video/quicktime (MOV)، video/mpeg (MPEG)، video/mpegps (MPEGPS)، video/mpg (MPG)، video/mp4 (MP4)، video/webm (WEBM)، video/wmv (WMV)، وvideo/3gpp (3GPP).

طرق الإدخال
يمكن توفير بيانات الفيديو إلى Gemini Flash بثلاث طرق رئيسية:

تمرير بيانات الفيديو المضمنة (Inline Video Data):
تُعد هذه الطريقة مناسبة لملفات الفيديو الصغيرة جدًا (حيث يقل إجمالي حجم الطلب عن 20 ميجابايت). يتم تشفير بيانات الفيديو بـ Base64 وتضمينها مباشرة في الطلب.

تحميل الفيديوهات باستخدام Files API:
يُوصى بهذه الطريقة القياسية للملفات الأكبر حجمًا (حيث يتجاوز حجم الملف الخام حوالي 15 ميجابايت، أو يتجاوز إجمالي حجم الطلب 20 ميجابايت). تدعم Files API ما يصل إلى 2 جيجابايت لكل ملف. توفر Files API مساحة تخزين تبلغ 20 جيجابايت لكل مشروع، مع صلاحية للملفات تبلغ 48 ساعة.

عناوين URL لفيديوهات YouTube:
تسمح هذه الطريقة بالمعالجة المباشرة لفيديوهات YouTube العامة أو غير المدرجة. تُعد هذه الطريقة فعالة بشكل خاص للفيديوهات الطويلة جدًا. ومع ذلك، هناك قيود: يُسمح بعنوان URL واحد لفيديو YouTube لكل طلب. يمتلك مستخدمو المستوى المجاني حدًا يوميًا للمعالجة يبلغ 8 ساعات؛ بينما لا يخضع مستخدمو المستوى المدفوع لهذا الحد الزمني المحدد. يوفر استخدام عناوين URL لفيديوهات YouTube طريقة فعالة للغاية لمعالجة الفيديوهات الطويلة جدًا، خاصة لمستخدمي المستوى المدفوع الذين يتجاوزون الحد اليومي البالغ 8 ساعات. هذا يشير إلى ميزة استراتيجية للاستفادة من المحتوى العام الموجود أو للسيناريوهات التي يكون فيها التحميل المباشر مرهقًا، مما يؤدي إلى نقل عبء التخزين والمعالجة الأولية إلى البنية التحتية لـ YouTube. تستفيد Google من بنيتها التحتية الواسعة لـ YouTube لمعالجة الفيديو، مما يفيد المطورين عن طريق تقليل أعباء التخزين والتحميل المحلية.

قيود حجم الفيديو والمدة والطلب
يبلغ الحد الأقصى لعدد ملفات الفيديو المسموح بها لكل طلب 10 ملفات. بالنسبة لحدود مدة الفيديو (لغير Live API)، تبلغ حوالي 45 دقيقة (مع الصوت) أو ساعة واحدة (فيديو فقط) لمقطع واحد متواصل. يمكن للنماذج ذات نافذة سياق 2 مليون معالجة ما يصل إلى ساعتين (دقة افتراضية) أو 6 ساعات (دقة منخفضة)؛ بينما يمكن للنماذج ذات نافذة سياق 1 مليون معالجة ما يصل إلى ساعة واحدة (دقة افتراضية) أو 3 ساعات (دقة منخفضة).

يتسم التفاعل بين حجم ملف الفيديو (حد Files API البالغ 2 جيجابايت )، وقيود المدة (45-60 دقيقة )، واستهلاك التوكنات (المتغير بناءً على الدقة وعدد الإطارات في الثانية ) بتعقيد كبير، مما يخلق تحديًا لتحسين الأداء. قد يكون الفيديو أقل من 2 جيجابايت ولكنه يتجاوز حدود التوكنات أو المدة، مما يجعله غير قابل للمعالجة. هذا يعني أن المطورين لا يمكنهم الاعتماد فقط على حجم الملف؛ بل يجب عليهم مراعاة المدة، والدقة، ونافذة سياق النموذج. هذا يتطلب نهجًا أكثر شمولية لإعداد الفيديو، حيث أن حجم الملف هو شرط ضروري ولكنه غير كافٍ للمعالجة الناجحة.

تُحسب التوكنات للفيديو على النحو التالي: يتم ترميز المسار الصوتي مع إطارات الفيديو، وتُحسب كل قطعة مدتها ثانية واحدة بـ 32 توكنًا. تبلغ الطوابع الزمنية 5 توكنات. يؤثر عدد الإطارات في الثانية (FPS) على تكلفة توكنات الطوابع الزمنية: 5 توكنات لكل إطار لـ FPS <=1 (للساعة الأولى)، و7 توكنات لكل إطار للمتبقي. 9 توكنات لكل إطار لـ FPS >1 (للساعة الأولى)، و11 توكنًا لكل إطار للمتبقي. يكون أخذ العينات الافتراضي بمعدل 1 إطار في الثانية للفيديو، و1 كيلوبت في الثانية (قناة واحدة) للصوت عبر Files API. تُحسب الإطارات الفردية بـ 66 توكنًا لكل إطار (دقة منخفضة) أو 258 توكنًا لكل إطار (دقة افتراضية) بالإضافة إلى توكنات الطوابع الزمنية. تُحسب الصوت بـ 25 توكنًا في الثانية بالإضافة إلى توكنات الطوابع الزمنية. يبلغ الإجمالي حوالي 300 توكن في الثانية عند دقة الوسائط الافتراضية، أو 100 توكن في الثانية عند دقة الوسائط المنخفضة.

قدرات فهم الفيديو الرئيسية
يمكن لنماذج Gemini أداء مهام تتضمن فهم محتويات الفيديوهات. تشمل هذه المهام تسمية الفيديوهات، والإجابة على الأسئلة المتعلقة بها، وتحليل أجزاء محددة من الفيديو باستخدام الطوابع الزمنية، ونسخ محتوى الفيديو عن طريق معالجة كل من المسار الصوتي والإطارات المرئية، ووصف المعلومات وتجزئتها واستخراجها من الفيديوهات.

تُمكن Live API من التفاعلات الصوتية والمرئية ثنائية الاتجاه ذات الكمون المنخفض، بما في ذلك تحديد العيوب المرئية في الوقت الفعلي. يبلغ الحد الأقصى لطول مشاركة الشاشة حوالي 10 دقائق لـ Live API مع الصوت الأصلي.

أفضل الممارسات والقيود لإدخال الفيديو
لتحقيق أفضل النتائج، يجب وضع الفيديو الواحد قبل المطالبة النصية. إذا كانت هناك حاجة لتحديد موقع الطوابع الزمنية في فيديو يحتوي على صوت، يجب طلب من النموذج إنشاء طوابع زمنية بتنسيق 

MM:SS أو H:MM:SS. يُنصح بتقسيم الفيديوهات التي تتجاوز حدود المدة أو التوكنات مسبقًا. كما يجب تعديل الدقة (تقليل الحجم أو استخدام معلمة 

mediaResolution: 'low') وضغط الفيديوهات باستخدام برامج ترميز فعالة مثل H.264 أو H.265 لتقليل حجم الملف.

يشير معدل أخذ العينات الافتراضي البالغ 1 إطار في الثانية للفيديو  والتحذير من فقدان التفاصيل في تسلسلات الحركة السريعة  إلى قيود محتملة لمحتوى الفيديو الديناميكي للغاية. تشير الحلول المقترحة "بإبطاء هذه المقاطع إذا لزم الأمر" أو تعيين "معدل إطارات مخصص"  إلى الحاجة إلى المعالجة المسبقة أو النظر الدقيق في نوع محتوى الفيديو. هذا يعني أن واجهة برمجة التطبيقات ليست مجرد أداة "أرسل وانسَ" لجميع أنواع الفيديو؛ بل تتطلب فهمًا لمعالجتها الداخلية لتحقيق أفضل النتائج لحالات الاستخدام المحددة.

تتضمن القيود الأخرى رفض النماذج الإجابة على الفيديوهات التي تنتهك سياسات السلامة ، واحتمال حدوث أخطاء في التعرف على الأصوات غير الكلامية.

الجدول 3: تنسيقات الفيديو المدعومة وطرق الإدخال لـ Gemini Flash

الميزة/الطريقة	التفاصيل
تنسيقات MIME المدعومة	
video/x-flv, video/quicktime, video/mpeg, video/mpegps, video/mpg, video/mp4, video/webm, video/wmv, video/3gpp 

تمرير البيانات المضمنة (Inline Data)	
- الاستخدام: لملفات الفيديو الصغيرة جداً (إجمالي حجم الطلب < 20 ميجابايت) 


- الآلية: يتم تضمين بيانات الفيديو المشفرة بـ Base64 مباشرة في الطلب 

تحميل باستخدام Files API	
- الاستخدام: للملفات الأكبر (أكثر من ~15 ميجابايت خام أو >20 ميجابايت إجمالي طلب) 


- القيود: يدعم ما يصل إلى 2 جيجابايت لكل ملف 


- التخزين: 20 جيجابايت لكل مشروع، صلاحية 48 ساعة 

عناوين URL لفيديوهات YouTube	
- الاستخدام: للمعالجة المباشرة لفيديوهات YouTube العامة أو غير المدرجة 


- القيود: عنوان URL واحد لكل طلب 


- الحدود: 8 ساعات معالجة يومياً للمستوى المجاني؛ لا يوجد حد للمستوى المدفوع 

5. اعتبارات عامة للمدخلات متعددة الوسائط
توجد عدة اعتبارات عامة يجب على المطورين وضعها في الحسبان عند دمج المدخلات متعددة الوسائط مع Gemini Flash لضمان الكفاءة والامتثال للقيود التشغيلية.

حدود حجم طلب API
يقتصر إجمالي حجم الطلب للبيانات المضمنة على 20 ميجابايت. يشمل هذا الحد المطالبات النصية وتعليمات النظام والملفات المضمنة. يُعد حد البيانات المضمنة البالغ 20 ميجابايت  والتوصية باستخدام Files API للصور الأكبر حجمًا أو المعاد استخدامها  بمثابة استراتيجية واضحة لإدارة أحجام حمولة واجهة برمجة التطبيقات وتحسين الكفاءة. هذا قرار معماري أساسي من Google لمنع الطلبات المضمنة الكبيرة التي تستهلك عرض النطاق الترددي بشكل مكثف، مما يدفع المطورين نحو حل أكثر قابلية للتوسع لإدارة الملفات في بيئات الإنتاج. يُعد التحميل لمرة واحدة والإشارة إليه بواسطة URI (Files API) أكثر كفاءة من تشفير Base64 المتكرر وإرسال ملفات كبيرة بشكل مضمن.

استخدام Files API و Cloud Storage
يُوصى باستخدام Files API للملفات التي يزيد حجمها عن 20 ميجابايت أو لإعادة استخدام الملفات. تدعم هذه الواجهة ما يصل إلى 2 جيجابايت لكل ملف فيديو. توفر Files API مساحة تخزين تبلغ 20 جيجابايت لكل مشروع مع صلاحية للملفات تبلغ 48 ساعة. يشير العمر الافتراضي للملفات المحملة إلى Files API البالغ 48 ساعة  إلى أن هذه الواجهة مصممة لتكون 

منطقة تجميع مؤقتة وليست حلاً للتخزين الدائم. هذا يعني أن المطورين يجب عليهم إدارة تخزينهم طويل الأجل (مثل Cloud Storage for Firebase ) ودمج سير عمل تحميل/حذف الملفات، مما يزيد من التعقيد التشغيلي ولكنه يضمن نظافة البيانات ويمنع التخزين غير المحدود للبيانات الحساسة المحتملة على خدمة الملفات المؤقتة من Google.

يُوصى باستخدام Cloud Storage for Firebase للملفات الكبيرة (الصور، ملفات PDF، الفيديو، الصوت) كحل أكثر تنظيمًا.

ترميز التوكنات (Tokenization) والتكلفة
تختلف معدلات ترميز التوكنات حسب نوع الوسائط:

الصور: 258 توكنًا للصور الصغيرة، ويتم تقسيم الصور الأكبر حجمًا إلى مربعات.

الفيديو: يُحسب المسار الصوتي بـ 32 توكنًا في الثانية، وإطارات الفيديو بـ 66-258 توكنًا لكل إطار، والطوابع الزمنية بـ 5-11 توكنًا لكل طابع زمني. يبلغ الإجمالي حوالي 100-300 توكن في الثانية.


تتوفر طريقة countTokens لتحديد عدد التوكنات قبل إرسال المطالبات.

يكشف هيكل التسعير المفصل  أن إدخال الصوت واستخدام Live API (خاصة إخراج الصوت) أغلى بكثير من الوسائط الأخرى. هذا عامل تكلفة حاسم للتطبيقات التي تعتمد بشكل كبير على التفاعلات الصوتية والتدفق في الوقت الفعلي. يجب على المطورين أخذ ذلك في الاعتبار في ميزانياتهم والنظر في تحسين استخدام الصوت أو استكشاف بنيات بديلة للتطبيقات الحساسة للتكلفة. يشير فرق السعر الكبير للصوت إلى أن معالجة الصوت وتوليده يتطلبان حسابات مكثفة، مما يؤدي إلى زيادة نفقات واجهة برمجة التطبيقات للتطبيقات كثيفة الصوت.

حدود المستوى المجاني ومعدل الطلب
تقدم نماذج Gemini Flash مستويات مجانية تتيح للمطورين البدء في استخدامها دون تكلفة. تختلف هذه الحدود حسب النموذج والخدمة:

Gemini 2.5 Flash:

مدخلات ومخرجات النص والصور والفيديو والصوت: مجانية تمامًا ضمن حدود المستوى المجاني.

Live API: مجانية الاستخدام.

الربط مع بحث Google (Grounding with Google Search): مجاني حتى 500 طلب في اليوم (RPD). هذا الحد مشترك مع Flash-Lite RPD.

حدود الطلبات اليومية: تم تخفيضها مؤخرًا من 500 طلب في اليوم إلى 250 طلبًا في اليوم.

Gemini 2.0 Flash:

مدخلات ومخرجات النص والصور والفيديو والصوت: مجانية تمامًا ضمن حدود المستوى المجاني.

تخزين السياق (Context Caching): مجاني.

توليد الصور: مجاني.

Live API: مجانية الاستخدام.

الربط مع بحث Google (Grounding with Google Search): مجاني حتى 500 طلب في اليوم (RPD).

حدود الطلبات اليومية: تم تخفيضها مؤخرًا من 1500 طلب في اليوم إلى 200 طلب في اليوم.

Gemini 2.5 Flash-Lite:

مدخلات ومخرجات النص والصور والفيديو والصوت: مجانية تمامًا ضمن حدود المستوى المجاني.

الربط مع بحث Google (Grounding with Google Search): مجاني حتى 500 طلب في اليوم (RPD). هذا الحد مشترك مع Flash RPD.

حدود الطلبات اليومية: 1000 طلب في اليوم.

Gemini 1.5 Flash و Gemini 1.5 Flash-8B:

مدخلات ومخرجات النص: مجانية تمامًا ضمن حدود المستوى المجاني.

تخزين السياق (Context Caching): مجاني حتى مليون توكن من التخزين في الساعة.

خدمة الضبط (Tuning Service): مجانية، وأسعار التوكنات هي نفسها للنماذج المضبوطة.

يشير التخفيض الأخير في حدود معدل المستوى المجاني لنماذج Gemini Flash  إلى اتجاه نحو تحقيق الدخل من استخدام واجهة برمجة التطبيقات وربما دفع المستخدمين الأكثر استخدامًا نحو المستويات المدفوعة أو الاستخدام الأكثر كفاءة. هذا يؤثر بشكل مباشر وسلبي على المطورين الذين يبنون مشاريع شخصية أو في مراحل التطوير المبكرة، مما قد يحد من التجريب ويتطلب النظر المبكر في الخطط المدفوعة. تشير هذه التخفيضات إلى أن Google تشدد سياسات الاستخدام المجاني، على الأرجح بسبب زيادة الطلب أو ارتفاع تكاليف البنية التحتية، مما يجبر المطورين على تحسين مكالمات واجهة برمجة التطبيقات أو النظر في المستويات المدفوعة في وقت أبكر.

أفضل الممارسات والقيود العامة
لتحقيق أفضل أداء، يُنصح بتقسيم الفيديوهات/الصوت الطويلة مسبقًا، وتعديل الدقة/الضغط، واستخدام Files API لتحقيق الكفاءة. يجب الالتزام بمبادئ تصميم المطالبات، وتكوين معلمات النموذج، واستخدام إعدادات السلامة لتوليد المحتوى.

تتضمن القيود رفض سياسات الإشراف على المحتوى الإجابات. قد لا يكون الاستدلال المكاني دقيقًا. النماذج غير مناسبة لتفسير الصور الطبية أو تقديم المشورة الطبية، ولا للتعرف على الأفراد غير المشهورين. يمكن أن تحدث هلوسة أو أخطاء مع الصور منخفضة الجودة أو المدورة أو ذات الدقة المنخفضة للغاية، أو مع النص المكتوب بخط اليد. قد تكون هناك عدم دقة في التعرف على الأصوات غير الكلامية.

الجدول 4: المعلمات والقيود العامة للمدخلات متعددة الوسائط

الميزة/الحد	الصور	الصوت	الفيديو	اعتبارات عامة
حد حجم البيانات المضمنة (Inline Data Limit)	
إجمالي حجم الطلب < 20 ميجابايت 

إجمالي حجم الطلب < 20 ميجابايت 

إجمالي حجم الطلب < 20 ميجابايت 

يشمل النص، تعليمات النظام، والملفات المضمنة 

الحد الأقصى للملفات لكل طلب	
3,000 ملف 

1 ملف (لغير Live API) 

10 ملفات 

الحد الأقصى لحجم الملف (Files API)	غير محدد بوضوح، ولكن يخضع لحدود التوكنات	غير محدد بوضوح، ولكن يخضع لحدود التوكنات	
2 جيجابايت لكل ملف 

تخزين Files API			
20 جيجابايت لكل مشروع، صلاحية 48 ساعة 

Files API هو منطقة تجميع مؤقتة 

حدود مدة الفيديو	لا ينطبق	لا ينطبق	
~45 دقيقة (مع صوت)، ~1 ساعة (فيديو فقط) 


نماذج 2M سياق: حتى 2 ساعة (دقة افتراضية) أو 6 ساعات (دقة منخفضة) 

معدلات ترميز التوكنات (تقريبي)	
258 توكنًا (صغير)، 258 توكنًا/تجانب (كبير) 

32 توكنًا/ثانية (صوت)، 25 توكنًا/ثانية (صوت) 

~100-300 توكن/ثانية (حسب الدقة) 

يمكن استخدام countTokens لتقدير التكلفة 

تسعير المدخلات (لكل مليون توكن)	
0.30 دولار (صور) 

1.00 دولار (صوت) 

0.30 دولار (فيديو) 

Live API: 3.00 دولار (صوت/صورة [فيديو]) 

حدود المستوى المجاني (RPD)	
250/يوم (Gemini 2.5 Flash) 

250/يوم (Gemini 2.5 Flash) 

250/يوم (Gemini 2.5 Flash) 

500/يوم (Grounding with Google Search) 

الميزات المجانية الإضافية	
توليد الصور (Gemini 2.0 Flash) 

تخزين السياق (Gemini 2.0/1.5/1.5-8B Flash) 

Live API (جميع نماذج Flash) 

خدمة الضبط (Gemini 1.5/1.5-8B Flash) 

6. الخلاصة والتوصيات
تُظهر قدرات Gemini Flash القوية متعددة الوسائط للصور والفيديوهات والصوت مرونة وكفاءة عالية، مدعومة ببنيتها الأساسية "متعددة الوسائط من الألف إلى الألف" التي تتيح فهمًا عميقًا وتفاعلاً معقدًا بين الوسائط المختلفة. توفر واجهة برمجة التطبيقات طرق إدخال متعددة، بما في ذلك البيانات المضمنة، وFiles API، وعناوين URL لفيديوهات YouTube، بالإضافة إلى إمكانيات المعالجة المتخصصة في الوقت الفعلي عبر Live API.

ومع ذلك، من الأهمية بمكان فهم وإدارة القيود المختلفة المتعلقة بحجم الملف، والمدة، وحدود الطلبات، وتكاليف ترميز التوكنات. يوضح التحليل أن هذه العوامل مترابطة، مما يتطلب نهجًا شاملاً لإعداد الوسائط. كما تبرز التكلفة الأعلى المرتبطة بمعالجة الصوت واستخدام Live API، مما يشير إلى أنها عمليات تتطلب موارد أكثر كثافة. بالإضافة إلى ذلك، يشير التشديد الأخير على حدود المستوى المجاني إلى تحول نحو الاستخدام المدفوع للتطوير المستدام.

التوصيات للمطورين
بناءً على التحليل المفصل، تُقدم التوصيات التالية للمطورين لتعظيم الاستفادة من Gemini Flash:

تحسين المدخلات: يجب دائمًا تحسين ملفات الوسائط (الدقة، الضغط، التجزئة) لتحقيق التوازن بين الجودة وكفاءة التوكنات والبقاء ضمن حدود واجهة برمجة التطبيقات. على سبيل المثال، يعد فهم آلية تجانب الصور أمرًا بالغ الأهمية للتحكم في التكلفة.

اختيار طريقة الإدخال بحكمة: يجب الاختيار بين البيانات المضمنة، أو Files API، أو عناوين URL لفيديوهات YouTube بناءً على حجم الملف، ومتطلبات إعادة الاستخدام، وما إذا كان المحتوى متاحًا للعامة. بالنسبة للملفات الكبيرة أو المستخدمة بشكل متكرر، فإن Files API ليست مجرد خيار، بل ضرورة.

التخطيط للتكلفة: يجب أخذ التكاليف المرتفعة لمعالجة الصوت وتفاعلات Live API في الاعتبار عند تصميم الميزانيات وبنيات التطبيقات. يجب استكشاف استراتيجيات لتقليل طول الصوت أو إخراجه حيثما أمكن ذلك.

إدارة دورة حياة الملفات: للتخزين طويل الأجل، يجب التكامل مع Cloud Storage for Firebase، حيث أن Files API هي منطقة تجميع مؤقتة ذات صلاحية 48 ساعة.

فهم حدود الوقت الفعلي: بالنسبة لـ Live API، يجب الالتزام بمتطلبات تنسيق الصوت المحددة (16-بت PCM، 16 كيلو هرتز، أحادي) والانتباه إلى حدود مدة مشاركة الشاشة، مما يستلزم المعالجة المسبقة لتحقيق الأداء الأمثل.

التكيف مع قيود المستوى المجاني: بالنسبة للمشاريع الشخصية أو مراحل التطوير المبكرة، يجب الانتباه إلى حدود المستوى المجاني المخفضة والتخطيط للانتقال المحتمل إلى المستويات المدفوعة مع زيادة الاستخدام.

مراعاة قيود النموذج: يجب أن يكون المطورون على دراية بالقيود مثل عدم دقة الاستدلال المكاني، وعدم ملاءمة النماذج للصور الطبية، والتعرف على الأشخاص، والأخطاء المحتملة في التعرف على الأصوات غير الكلامية، وتصميم التطبيقات وفقًا لذلك.

الاستفادة من الأدوات المساعدة: يجب استخدام أدوات مثل countTokens لتقدير التكاليف ومستودعات GitHub (مثل hackingthemarkets/gemini-multimodal-structured-extraction) للحصول على أمثلة تعليمات برمجية عملية وأفضل الممارسات.

7. تقرير إضافي: Gemini 2.0 Flash Preview Image Generation
يُعد gemini-2.0-flash-preview-image-generation نموذجًا متخصصًا ضمن عائلة Gemini، مصممًا لتمكين توليد الصور وتعديلها من خلال التفاعل المحادثي. يمكن لهذا النموذج إنشاء صور جديدة من وصف نصي (نص إلى صورة)، أو تعديل صور موجودة باستخدام مطالبات نصية (نص وصورة إلى صورة). كما يدعم أوضاع تفاعل أخرى مثل توليد الصور والنصوص المتداخلة، أو استخدام صور ومدخلات نصية لإنشاء صور ونصوص جديدة ذات صلة، أو تحرير الصور في محادثة متعددة الأدوار (مثل تحميل صورة سيارة ثم طلب تحويلها إلى سيارة مكشوفة ثم تغيير لونها). جميع الصور التي يتم إنشاؤها باستخدام هذا النموذج تتضمن علامة مائية SynthID.

القيود الرئيسية للمدخلات لتوليد الصور:
من الأهمية بمكان ملاحظة أن قدرات توليد الصور في gemini-2.0-flash-preview-image-generation لا تدعم مدخلات الصوت أو الفيديو بشكل مباشر. هذا يعني أنه لا يمكن توجيه النموذج لإنشاء صورة بناءً على محتوى مقطع صوتي أو فيديو فقط. يجب أن تكون المدخلات لتوليد الصور أو تحريرها نصية، أو صورًا، أو مزيجًا من النص والصور.

للحصول على أفضل أداء، يُنصح باستخدام لغات معينة مثل الإنجليزية (EN)، الإسبانية المكسيكية (es-MX)، اليابانية (ja-JP)، الصينية المبسطة (zh-CN)، الهندية (hi-IN). قد لا يتم تشغيل توليد الصور دائمًا، مما يتطلب طلب مخرجات الصور بشكل صريح في المطالبة (على سبيل المثال، "توليد صورة"، "توفير صور أثناء التقدم"، "تحديث الصورة"). عند توليد نص لصورة، يعمل Gemini بشكل أفضل إذا قمت أولاً بتوليد النص ثم طلبت صورة مع النص. قد لا يكون توليد الصور متاحًا في جميع المناطق/البلدان.